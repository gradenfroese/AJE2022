library(shiny); runApp('leaflet_subzones_shiny_focal.R')
#clean up
rm(list = ls())
'%ni%' <- Negate('%in%')
source("./scripts/functions_PABBM.R")
library("tidyverse") ; theme_set(theme_classic())
library("rlang") #for using {{}} to integrate dplyr with ggplot
#library("lubridate")
library("janitor")
#library("bayestestR") #masks hdi from tidybayes, #for posterior playing
library("brms")
library("gridExtra")
library("grid") #for adding title to grid.arrange
#library("rstan") #for plotting posteriors
#library("coda") #for function HPDinterval #masks traceplot for rstan
library("scales") #for ggplot scale fixing
#library("bayesplot") #for bayes ggploting
library("tidybayes") #bayes diagnostics
gun_all <- readRDS("./inputs/cartography/derived/bayes_hunts_inputs_gun.rds")
trap_all <- readRDS("./inputs/cartography/derived/bayes_hunts_inputs_trap.rds")
predictor_lst <- readRDS("./inputs/cartography/derived/predictor_lst.rds")
model_names <- read_csv("./inputs/cartography/derived/mv_hunts_inputs/mv_model_names.csv")
gun48 <- gun_all %>%
filter(gps_hours <= 48 | is.na(gps_hours))
gun48 <- gun48 %>%
mutate(max_km_village = stdCS_pred(max_km_village),
double_zero_brought = stdCS_pred(double_zero_brought),
chevrotine_brought = stdCS_pred(chevrotine_brought),
porters = stdCS_pred(porters),
porters = stdCS_pred(other_hunters))
trap_all <- trap_all %>%
mutate(max_km_village = stdCS_pred(max_km_village),
traps_checked = stdCS_pred(traps_checked),
traps_days = stdCS_pred(traps_days))
gun48 <- gun48 %>%
mutate(weather_impute = ifelse(weather_impute == "wet", 1, 0))
trap_all <- trap_all %>%
mutate(weather_impute = ifelse(weather_impute == "wet", 1, 0))
gun48_mv <- gun48 %>%
select(offtake,kg,money,
predictor_lst$gun_predict, -month) %>%
mutate(offtakeNA = is.na(offtake),
kgNA = is.na(kg),
moneyNA = is.na(money))
trap_mv <- trap_all %>%
select(offtake,kg,money,
predictor_lst$trap_predict, -month) %>%
mutate(offtakeNA = is.na(offtake),
kgNA = is.na(kg),
moneyNA = is.na(money))
n_sims <- 100
n_sim_hunts <- nrow((gun48_mv) %>%
drop_na())
a_prior_season <- rnorm(n_sims, mean = 0, sd = 0.5)
a_prior_nightday <- rnorm(n_sims, mean = 0, sd = 0.5)
b_prior_weather_impute <- rnorm(n_sims, mean = 0, sd = 0.5)
b_prior_max_km_village <- rnorm(n_sims, mean = 0, sd = 0.5)
b_prior_double_zero_brought <- rnorm(n_sims, mean = 0, sd = 0.5)
b_prior_chevrotine_brought <- rnorm(n_sims, mean = 0, sd = 0.5)
b_prior_porters <- rnorm(n_sims, mean = 0, sd = 0.5)
b_prior_other_hunters <- rnorm(n_sims, mean = 0, sd = 0.5)
a_prior_village <- rnorm(n_sims, mean = 0, sd = rexp(n = n_sims,rate = 2))
a_prior_hunter <- rnorm(n_sims, mean = 0, sd = rexp(n = n_sims,rate = 2))
prior_sims_list <- list()
for (j in 1:n_sims) {
a_prior_season_tmp <- a_prior_season[j]
a_prior_nightday_tmp <- a_prior_nightday[j]
b_prior_weather_impute_tmp <- b_prior_weather_impute[j]
b_prior_max_km_village_tmp <- b_prior_max_km_village[j]
b_prior_double_zero_brought_tmp <- b_prior_double_zero_brought[j]
b_prior_chevrotine_brought_tmp <- b_prior_chevrotine_brought[j]
b_prior_porters_tmp <- b_prior_porters[j]
b_prior_other_hunters_tmp <- b_prior_other_hunters[j]
a_prior_village_tmp <- a_prior_village[j]
a_prior_hunter_tmp <- a_prior_hunter[j]
prior_sims_list[[j]] <- tibble(sim = j,
weather_impute = sample(gun48_mv$weather_impute,n_sim_hunts),
max_km_village = sample(gun48_mv$max_km_village,n_sim_hunts),
double_zero_brought = sample(gun48_mv$double_zero_brought,n_sim_hunts),
chevrotine_brought = sample(gun48_mv$chevrotine_brought,n_sim_hunts),
porters = sample(gun48_mv$porters,n_sim_hunts),
other_hunters = sample(gun48_mv$other_hunters,n_sim_hunts),
offtake = NA, kg = NA, money = NA)
for (i in 1:n_sim_hunts) {
prior_sims_list[[j]]$offtake[i] <- floor(exp(a_prior_village_tmp + a_prior_hunter_tmp +
a_prior_season_tmp + a_prior_nightday_tmp +
b_prior_weather_impute_tmp*prior_sims_list[[j]]$weather_impute[i] +
b_prior_max_km_village_tmp*prior_sims_list[[j]]$max_km_village[i] +
b_prior_double_zero_brought_tmp*prior_sims_list[[j]]$double_zero_brought[i] +
b_prior_chevrotine_brought_tmp*prior_sims_list[[j]]$chevrotine_brought[i] +
b_prior_porters_tmp*prior_sims_list[[j]]$porters[i] +
b_prior_other_hunters_tmp*prior_sims_list[[j]]$other_hunters[i]))
}
}
prior_sims_all <- bind_rows(prior_sims_list) %>%
filter(!is.na(offtake))
