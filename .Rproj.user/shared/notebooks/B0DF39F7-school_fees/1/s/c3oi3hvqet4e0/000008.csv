"0","##offtake counted and effort by month"
"0",""
"0","#cut villages sans yearly data"
"0","cut_villages <- c(""C2"", ""C8"", ""E4"", ""E10"")"
"0",""
"0","village_levels <- paste0(c(rep(""C"",10),rep(""E"",10)), "
"0","       rep(seq(1:10),2)) "
"0",""
"0","village_levels <- village_levels[village_levels %ni% cut_villages]"
"0",""
"0","#EFFORT"
"0","yearly_eff <- p2_eff %>% "
"0","  filter(village %ni% cut_villages  & "
"0","           date < ""2020-02-02"") %>% #keep in within one year of sampling"
"0","  mutate(month = month(date)) %>% "
"0","  mutate(village = factor(village, levels = village_levels)) %>% "
"0","  select(village,session,date,month,morning_afternoon)"
"0",""
"0","monthly_eff <- yearly_eff %>%"
"0","  group_by(village,month) %>%"
"0","  dplyr::summarise(n_days = length(unique(date))) %>% "
"0","  mutate(mf = as.factor(month))"
"1","`summarise()` has grouped output by 'village'. You can override using the `.groups` argument.
"
"0","days_month_df <- tibble(month = unique(monthly_eff$month), "
"0","                     mf =  levels(monthly_eff$mf),"
"0","                     days_month = c(31,28,31,30,"
"0","                                31,30,31,31,"
"0","                                30,31,30,31))"
"0",""
"0","monthly_eff <- left_join(monthly_eff,days_month_df) %>% mutate(mf = as.factor(mf))"
"1","Joining, by = c(""month"", ""mf"")
"
"0","#OFFTAKE"
"0","yearly_offtake <- p2_offtake %>% "
"0","  filter(village %ni% cut_villages  & "
"0","           date < ""2020-02-02"") %>% #keep in within one year of sampling"
"0","  mutate(village = factor(village, levels = village_levels)) %>% "
"0","  mutate(month = month(date))"
"0",""
"0","get_monthly_offtake <- function(...) {"
"0",""
"0","  yearly_offtake  %>%"
"0","    group_by_(...) %>% "
"0","    arrange(village,month) %>% "
"0","    dplyr::summarise(offtake_counted = n()) %>% "
"0","    mutate(mf = as.factor(month))"
"0","  "
"0","}"
"0",""
"0","monthly_species <- get_monthly_offtake(""village"",""species"",""month"")"
"1","`summarise()` has grouped output by 'village', 'species'. You can override using the `.groups` argument.
"
"0","monthly_total <- get_monthly_offtake(""village"",""month"")"
"1","`summarise()` has grouped output by 'village'. You can override using the `.groups` argument.
"
"0","emo_village <- left_join(monthly_total, monthly_eff) %>% "
"0","  mutate(emo = round("
"0","    (offtake_counted*days_month) / "
"0","      (n_days*0.528) #capture rate"
"0","    ,0)"
"0","  ) %>% "
"0","  select(village,month,mf,offtake_counted,emo)"
"1","Joining, by = c(""village"", ""month"", ""mf"")
"
"0","emo_total <- emo_village %>% "
"0","  group_by(mf) %>% "
"0","  dplyr::summarise(emo = sum(emo)) %>% "
"0","  mutate(diff = emo - round(mean(emo),0))"
"0",""
"0","emo_ranks <- emo_village %>% "
"0","  arrange(village,desc(emo)) %>% "
"0","  mutate(month_rank = 1:12) %>% "
"0","  arrange(village,mf)"
"0",""
"0","sep_ranks <- emo_ranks %>% "
"0","  filter(mf == ""9"")"
"0",""
"0",""
"0",""
